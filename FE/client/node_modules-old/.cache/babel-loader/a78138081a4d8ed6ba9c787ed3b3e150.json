{"ast":null,"code":"var _jsxFileName = \"D:\\\\Javascript Train\\\\REACT\\\\first\\\\modal\\\\FE\\\\client\\\\src\\\\app\\\\Axx.tsx\";\nimport React from 'react';\nimport DataSource from 'devextreme/data/data_source';\nimport CustomStore from 'devextreme/data/custom_store';\nimport Chart, { ValueAxis, Label, Legend, Series, Size, Export, LoadingIndicator } from 'devextreme-react/chart';\nimport SelectBox from 'devextreme-react/select-box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Axx extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.customizePoint = () => {\n      const cl = this.state.paletteIndex === 2 ? 0 : this.state.paletteIndex + 1;\n      const color = this.state.palette[cl]; // console.log(color)\n\n      return {\n        color\n      };\n    };\n\n    this.changeTemperature = e => {\n      this.state.monthWeather.filter(['t', '>', e.value]);\n      this.state.monthWeather.load();\n    };\n\n    this.customizeLabel = e => {\n      // e.preventDefault();\n      return `${e.valueText}${'&#176C'}`;\n    };\n\n    this.state = {\n      temperature: [6, 7, 8, 9, 10, 11, 12],\n      palette: ['#c3a2cc', '#b7b5e0', '#e48cba'],\n      paletteIndex: 0,\n      monthWeather: []\n    };\n  }\n\n  componentDidMount() {\n    var s = new DataSource({\n      store: new CustomStore({\n        load: () => {\n          return fetch('./../data/jx.json').then(e => e.json()).catch(() => {\n            throw 'Data Loading Error';\n          });\n        },\n        loadMode: 'raw'\n      }),\n      filter: ['t', '>', '6'],\n      paginate: false\n    });\n    this.setState({\n      monthWeather: s\n    });\n    console.log(s);\n    this.customizePoint(); // this.changeTemperature(e);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chart-demo\",\n      children: [/*#__PURE__*/_jsxDEV(Chart, {\n        title: \"Temperature in Barcelona: January 2012\",\n        dataSource: this.state.monthWeather,\n        customizePoint: this.customizePoint,\n        children: [/*#__PURE__*/_jsxDEV(Size, {\n          height: 420\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ValueAxis, {\n          children: /*#__PURE__*/_jsxDEV(Label, {\n            customizeText: this.customizeLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Series, {\n          argumentField: \"day\",\n          valueField: \"t\",\n          type: \"bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          visible: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Export, {\n          enabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(LoadingIndicator, {\n          enabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action\",\n        children: [/*#__PURE__*/_jsxDEV(SelectBox, {\n          id: \"choose-temperature\",\n          dataSource: this.state.temperature,\n          width: 70,\n          defaultValue: 6 // onValueChanged={this.changeTemperature()} \n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label\",\n          children: \"Choose a temperature threshold, \\xB0C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Axx;","map":{"version":3,"sources":["D:/Javascript Train/REACT/first/modal/FE/client/src/app/Axx.tsx"],"names":["React","DataSource","CustomStore","Chart","ValueAxis","Label","Legend","Series","Size","Export","LoadingIndicator","SelectBox","Axx","Component","constructor","props","customizePoint","cl","state","paletteIndex","color","palette","changeTemperature","e","monthWeather","filter","value","load","customizeLabel","valueText","temperature","componentDidMount","s","store","fetch","then","json","catch","loadMode","paginate","setState","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,KAAP,IACEC,SADF,EAEEC,KAFF,EAGEC,MAHF,EAIEC,MAJF,EAKEC,IALF,EAMEC,MANF,EAOEC,gBAPF,QAQO,wBARP;AASA,OAAOC,SAAP,MAAsB,6BAAtB;;;AAQA,MAAMC,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAA+C;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;;AADsB,SAgCxBC,cAhCwB,GAgCP,MAAM;AACrB,YAAMC,EAAE,GAAG,KAAKC,KAAL,CAAWC,YAAX,KAA4B,CAA5B,GAAgC,CAAhC,GAAoC,KAAKD,KAAL,CAAWC,YAAX,GAA0B,CAAzE;AACA,YAAMC,KAAK,GAAG,KAAKF,KAAL,CAAWG,OAAX,CAAmBJ,EAAnB,CAAd,CAFqB,CAGrB;;AAEA,aAAO;AAAEG,QAAAA;AAAF,OAAP;AACD,KAtCuB;;AAAA,SAwCxBE,iBAxCwB,GAwCHC,CAAD,IAAwB;AAC1C,WAAKL,KAAL,CAAWM,YAAX,CAAwBC,MAAxB,CAA+B,CAAC,GAAD,EAAM,GAAN,EAAWF,CAAC,CAACG,KAAb,CAA/B;AACA,WAAKR,KAAL,CAAWM,YAAX,CAAwBG,IAAxB;AACD,KA3CuB;;AAAA,SA6CxBC,cA7CwB,GA6CNL,CAAD,IAA4B;AAC3C;AACA,aAAQ,GAAEA,CAAC,CAACM,SAAU,GAAE,QAAS,EAAjC;AACD,KAhDuB;;AAEtB,SAAKX,KAAL,GAAa;AACXY,MAAAA,WAAW,EAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CADD;AAEXT,MAAAA,OAAO,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CAFE;AAGXF,MAAAA,YAAY,EAAE,CAHH;AAIXK,MAAAA,YAAY,EAAE;AAJH,KAAb;AAMD;;AAEDO,EAAAA,iBAAiB,GAAE;AACjB,QAAIC,CAAC,GAAG,IAAI/B,UAAJ,CAAe;AACrBgC,MAAAA,KAAK,EAAE,IAAI/B,WAAJ,CAAgB;AACrByB,QAAAA,IAAI,EAAE,MAAM;AACV,iBAAOO,KAAK,CAAC,mBAAD,CAAL,CACJC,IADI,CACCZ,CAAC,IAAIA,CAAC,CAACa,IAAF,EADN,EAEJC,KAFI,CAEE,MAAM;AAAE,kBAAM,oBAAN;AAA6B,WAFvC,CAAP;AAGD,SALoB;AAMrBC,QAAAA,QAAQ,EAAE;AANW,OAAhB,CADc;AASrBb,MAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CATa;AAUrBc,MAAAA,QAAQ,EAAE;AAVW,KAAf,CAAR;AAYA,SAAKC,QAAL,CAAc;AACZhB,MAAAA,YAAY,EAAEQ;AADF,KAAd;AAGAS,IAAAA,OAAO,CAACC,GAAR,CAAYV,CAAZ;AAEA,SAAKhB,cAAL,GAlBiB,CAmBjB;AACD;;AAqBD2B,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,YAAR;AAAA,8BACA,QAAC,KAAD;AACE,QAAA,KAAK,EAAC,wCADR;AAEE,QAAA,UAAU,EAAE,KAAKzB,KAAL,CAAWM,YAFzB;AAGE,QAAA,cAAc,EAAE,KAAKR,cAHvB;AAAA,gCAIE,QAAC,IAAD;AAAM,UAAA,MAAM,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,SAAD;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,aAAa,EAAE,KAAKY;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF,eAQE,QAAC,MAAD;AACE,UAAA,aAAa,EAAC,KADhB;AAEE,UAAA,UAAU,EAAC,GAFb;AAGE,UAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,gBARF,eAaE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAbF,eAcE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAdF,eAeE,QAAC,gBAAD;AAAkB,UAAA,OAAO,EAAE;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAkBA;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,EAAE,EAAC,oBADL;AAEE,UAAA,UAAU,EAAE,KAAKV,KAAL,CAAWY,WAFzB;AAGE,UAAA,KAAK,EAAE,EAHT;AAIE,UAAA,YAAY,EAAE,CAJhB,CAKE;;AALF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgCD;;AArF4C;;AAwF/C,eAAelB,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport DataSource from 'devextreme/data/data_source';\r\nimport CustomStore from 'devextreme/data/custom_store';\r\nimport Chart, {\r\n  ValueAxis,\r\n  Label,\r\n  Legend,\r\n  Series,\r\n  Size,\r\n  Export,\r\n  LoadingIndicator\r\n} from 'devextreme-react/chart';\r\nimport SelectBox from 'devextreme-react/select-box';\r\n\r\ntype myProps = {\r\n  temperature: any,\r\n  palette: any,\r\n  paletteIndex:any,\r\n  monthWeather:any\r\n}\r\nclass Axx extends React.Component<{}, myProps> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      temperature:[6, 7, 8, 9, 10, 11, 12],\r\n      palette :['#c3a2cc', '#b7b5e0', '#e48cba'],\r\n      paletteIndex: 0,\r\n      monthWeather: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    var s = new DataSource({\r\n      store: new CustomStore({\r\n        load: () => {\r\n          return fetch('./../data/jx.json')\r\n            .then(e => e.json())\r\n            .catch(() => { throw 'Data Loading Error'; });\r\n        },\r\n        loadMode: 'raw'\r\n      }),\r\n      filter: ['t', '>', '6'],\r\n      paginate: false\r\n    })\r\n    this.setState({\r\n      monthWeather: s\r\n    })\r\n    console.log(s)\r\n\r\n    this.customizePoint();\r\n    // this.changeTemperature(e);\r\n  }\r\n\r\n  customizePoint = () => {\r\n    const cl = this.state.paletteIndex === 2 ? 0 : this.state.paletteIndex + 1;\r\n    const color = this.state.palette[cl];\r\n    // console.log(color)\r\n\r\n    return { color };\r\n  };\r\n\r\n  changeTemperature = (e: { value: any; }) => {\r\n    this.state.monthWeather.filter(['t', '>', e.value]);\r\n    this.state.monthWeather.load();\r\n  };\r\n\r\n  customizeLabel = (e: { valueText: any; }) => {\r\n    // e.preventDefault();\r\n    return `${e.valueText}${'&#176C'}`;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"chart-demo\">\r\n      <Chart\r\n        title=\"Temperature in Barcelona: January 2012\"\r\n        dataSource={this.state.monthWeather}\r\n        customizePoint={this.customizePoint}>\r\n        <Size height={420} />\r\n        <ValueAxis>\r\n          <Label customizeText={this.customizeLabel} />\r\n        </ValueAxis>\r\n        <Series\r\n          argumentField=\"day\"\r\n          valueField=\"t\"\r\n          type=\"bar\"\r\n        />\r\n        <Legend visible={false} />\r\n        <Export enabled={true} />\r\n        <LoadingIndicator enabled={true} />\r\n      </Chart>\r\n      <div className=\"action\">\r\n        <SelectBox\r\n          id=\"choose-temperature\"\r\n          dataSource={this.state.temperature}\r\n          width={70}\r\n          defaultValue={6}\r\n          // onValueChanged={this.changeTemperature()} \r\n          />\r\n        <div className=\"label\">Choose a temperature threshold, &deg;C:\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Axx;"]},"metadata":{},"sourceType":"module"}
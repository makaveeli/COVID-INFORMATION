[{"D:\\Javascript Train\\REACT\\first\\modal\\src\\index.js":"1","D:\\Javascript Train\\REACT\\first\\modal\\src\\App.js":"2","D:\\Javascript Train\\REACT\\first\\modal\\src\\reportWebVitals.js":"3","D:\\Javascript Train\\REACT\\first\\modal\\src\\Main.js":"4","D:\\Javascript Train\\REACT\\first\\modal\\src\\home.js":"5","D:\\Javascript Train\\REACT\\first\\modal\\src\\Home.js":"6","D:\\Javascript Train\\REACT\\first\\modal\\src\\Seputink.js":"7","D:\\Javascript Train\\REACT\\first\\modal\\src\\components\\Crud.js":"8","D:\\Javascript Train\\REACT\\first\\modal\\src\\components\\DataList.js":"9","D:\\Javascript Train\\REACT\\first\\modal\\src\\components\\ListCard.js":"10","D:\\Javascript Train\\REACT\\first\\modal\\src\\components\\Drud.js":"11","D:\\Javascript Train\\REACT\\first\\modal\\src\\Homepage.js":"12","D:\\Javascript Train\\REACT\\first\\modal\\src\\AddData.js":"13","D:\\Javascript Train\\REACT\\first\\modal\\src\\IndexData.js":"14","D:\\Javascript Train\\REACT\\first\\modal\\src\\components\\modal.js":"15","D:\\Javascript Train\\REACT\\first\\modal\\src\\data.js":"16","D:\\Javascript Train\\REACT\\first\\modal\\src\\modalEdit.js":"17","D:\\Javascript Train\\REACT\\first\\modal\\src\\Select.js":"18","D:\\Javascript Train\\REACT\\first\\modal\\src\\open.js":"19","D:\\Javascript Train\\REACT\\first\\modal\\src\\Not.js":"20","D:\\Javascript Train\\REACT\\first\\modal\\src\\color.js":"21","D:\\Javascript Train\\REACT\\first\\modal\\src\\demo\\generator.js":"22","D:\\Javascript Train\\REACT\\first\\modal\\src\\demo\\random.js":"23","D:\\Javascript Train\\REACT\\first\\modal\\src\\Sidebar.js":"24"},{"size":590,"mtime":1612367467634,"results":"25","hashOfConfig":"26"},{"size":1238,"mtime":1625234807023,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"26"},{"size":881,"mtime":1610038104592,"results":"29","hashOfConfig":"26"},{"size":970,"mtime":1608312262761,"results":"30","hashOfConfig":"26"},{"size":951,"mtime":1608789930674,"results":"31","hashOfConfig":"26"},{"size":1661,"mtime":1608789874905,"results":"32","hashOfConfig":"26"},{"size":13998,"mtime":1609153767577,"results":"33","hashOfConfig":"26"},{"size":3447,"mtime":1609004915766,"results":"34","hashOfConfig":"26"},{"size":1216,"mtime":1609079658854,"results":"35","hashOfConfig":"26"},{"size":996,"mtime":1609128016589,"results":"36","hashOfConfig":"26"},{"size":723,"mtime":1609309753778,"results":"37","hashOfConfig":"26"},{"size":1894,"mtime":1609176561042,"results":"38","hashOfConfig":"26"},{"size":4041,"mtime":1609178934483,"results":"39","hashOfConfig":"26"},{"size":453,"mtime":1609224146313,"results":"40","hashOfConfig":"26"},{"size":4315,"mtime":1609927300470,"results":"41","hashOfConfig":"26"},{"size":764,"mtime":1612365266476,"results":"42","hashOfConfig":"26"},{"size":783,"mtime":1610038427747,"results":"43","hashOfConfig":"26"},{"size":2262,"mtime":1610641625196,"results":"44","hashOfConfig":"26"},{"size":291,"mtime":1612364942407,"results":"45","hashOfConfig":"26"},{"size":747,"mtime":1616064471467,"results":"46","hashOfConfig":"26"},{"size":8349,"mtime":1616649998266,"results":"47","hashOfConfig":"26"},{"size":353,"mtime":1616649984428,"results":"48","hashOfConfig":"26"},{"size":2968,"mtime":1617098580093,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1j96tfm",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"83"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"111"},"D:\\Javascript Train\\REACT\\first\\modal\\src\\index.js",[],["112","113"],"D:\\Javascript Train\\REACT\\first\\modal\\src\\App.js",["114"],"D:\\Javascript Train\\REACT\\first\\modal\\src\\reportWebVitals.js",[],"D:\\Javascript Train\\REACT\\first\\modal\\src\\Main.js",["115"],"import React, { Component } from \"react\"\r\nimport { Route, NavLink, HashRouter } from \"react-router-dom\"\r\nimport App from './App'\r\nimport modalEdit from './modalEdit'\r\nimport Select from './Select'\r\n\r\nexport class Main extends React.Component {\r\n  render () {\r\n    return (\r\n      <HashRouter>\r\n        <div>\r\n          <h1 className=\"title\">xxx</h1>\r\n          <ul className=\"header\">\r\n            <li><NavLink to=\"/\">Home</NavLink></li>\r\n            <li><NavLink to=\"/modal\">Add</NavLink></li>\r\n            <li><NavLink to=\"/select\">select</NavLink></li>\r\n          </ul>\r\n          <div className=\"content\">\r\n            <Route exact path=\"/\" component={App}/>\r\n            <Route exact path=\"/modal\" component={modalEdit}/>\r\n            <Route exact path=\"/select\" component={Select}/>\r\n          </div>\r\n        </div>\r\n      </HashRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Main",["116","117"],"D:\\Javascript Train\\REACT\\first\\modal\\src\\home.js",[],"D:\\Javascript Train\\REACT\\first\\modal\\src\\Home.js",["118","119","120","121","122","123","124","125","126","127"],"D:\\Javascript Train\\REACT\\first\\modal\\src\\Seputink.js",["128"],"D:\\Javascript Train\\REACT\\first\\modal\\src\\components\\Crud.js",["129","130","131","132","133","134","135","136"],"import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useForm, Form } from './ListCard';\r\nimport * as employeeService from \"./Drud\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport '../index.css'\r\nconst initialFValues = {\r\n  // id: 0,\r\n  username: '',\r\n  position: '',\r\n  fullname: '',\r\n  employe: '',\r\n  firstname: '',\r\n  directorate: '',\r\n  lastname: '',\r\n  group: '',\r\n  nik: '',\r\n  gcpproject: '',\r\n  email: '',\r\n  gcprole: '',\r\n  phone: '',\r\n}\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      // padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    formControl: {\r\n      // margin: theme.spacing(1),\r\n      minWidth: 430,\r\n      marginLeft: 32,\r\n      marginTop: 0\r\n    },\r\n    formTxt : {\r\n      marginLeft: 32, \r\n      marginBottom: 7, \r\n      width: 430\r\n    },\r\n    txtCol : {\r\n      color : 'red'\r\n    },\r\n    subBtn : {\r\n      marginRight : 20\r\n    }\r\n  }),\r\n);\r\n\r\nfunction Crud(){\r\n  const [open, setOpen] = useState(true);\r\n  const classes = useStyles();\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const history = useHistory();\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('username' in fieldValues)\r\n        temp.username = fieldValues.username ? \"\" : \"This username is required.\"\r\n    if ('position' in fieldValues)\r\n        temp.position = fieldValues.position ? \"\" : \"This position is required.\"\r\n    if ('fullname' in fieldValues)\r\n        temp.fullname = fieldValues.fullname ? \"\" : \"This fullname is required.\"\r\n    if ('employe' in fieldValues)\r\n        temp.employe = fieldValues.employe ? \"\" : \"This employe is required.\"\r\n    if ('firstname' in fieldValues)\r\n        temp.firstname = fieldValues.firstname ? \"\" : \"This firstname is required.\"\r\n    if ('directorate' in fieldValues)\r\n        temp.directorate = fieldValues.directorate ? \"\" : \"This directorate is required.\"\r\n    if ('lastname' in fieldValues)\r\n        temp.lastname = fieldValues.lastname ? \"\" : \"This lastname is required.\"\r\n    if ('group' in fieldValues)\r\n        temp.group = fieldValues.group ? \"\" : \"This group is required.\"\r\n    if ('nik' in fieldValues)\r\n        temp.nik = fieldValues.nik ? \"\" : \"This nik is required.\"\r\n    if ('gcpproject' in fieldValues)\r\n        temp.gcpproject = fieldValues.gcpproject ? \"\" : \"This gcpproject is required.\"\r\n    if ('email' in fieldValues)\r\n        temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n    if ('gcprole' in fieldValues)\r\n        temp.gcprole = fieldValues.gcprole ? \"\" : \"This gcprole is required.\"\r\n    if ('phone' in fieldValues)\r\n        temp.phone = fieldValues.phone ? \"\" : \"This phone is required.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    if (fieldValues == values)\r\n        return Object.values(temp).every(x => x == \"\")\r\n  }\r\n\r\n  const {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  const Buld = () =>{\r\n    var name = values.name\r\n    var email = values.email\r\n    const data = {name: name, email: email}\r\n    // console.log(data)\r\n    const response = fetch('/post', {\r\n      method: 'POST',\r\n      headers: {\r\n         'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(values)\r\n      // inputan :\r\n    });\r\n    return response.json();\r\n    \r\n  }\r\n  const handleSubmit = e => {\r\n      e.preventDefault()\r\n      if (validate()){\r\n          employeeService.insertEmployee(values)\r\n          resetForm()\r\n          Buld(values)\r\n          \r\n      }\r\n  }\r\n\r\n  return (\r\n   \r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\"\r\n                    maxWidth=\"false\">\r\n      <div >\r\n        <DialogTitle id=\"form-dialog-title\">From New User</DialogTitle>\r\n          <Form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n        <DialogContent style={{ overflow: \"hidden\"}}>\r\n          <div style={{width:1000}}>\r\n          {/* <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We will send updates\r\n            occasionally.\r\n          </DialogContentText> */}\r\n            <div>\r\n              <Grid container spacing={1}>\r\n                  <Grid item xs={6}>\r\n                      <TextField\r\n                          name='username'\r\n                          label=\"Username\"\r\n                          value={values.username}\r\n                          onChange={handleInputChange}\r\n                          className={classes.formTxt}\r\n                          error={errors.username}\r\n                          helperText={errors.username}\r\n                      />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <TextField\r\n                           name='position'\r\n                           label=\"Position\"\r\n                           value={values.position}\r\n                           onChange={handleInputChange}\r\n                           className={classes.formTxt}\r\n                           error={errors.position}\r\n                           helperText={errors.position}\r\n                      />\r\n                  </Grid>\r\n              </Grid>\r\n              <Grid container  >\r\n                  <Grid item xs={6}>\r\n                      <TextField\r\n                          name='fullname'\r\n                          label=\"Fullname\"\r\n                          value={values.fullname}\r\n                          onChange={handleInputChange}\r\n                          className={classes.formTxt}\r\n                          error={errors.fullname}\r\n                          helperText={errors.fullname}\r\n                      />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <TextField\r\n                          name='employe'\r\n                          label=\"Employee Status\"\r\n                          value={values.employe}\r\n                          onChange={handleInputChange}\r\n                          className={classes.formTxt}\r\n                          error={errors.employe}\r\n                          helperText={errors.employe}\r\n                      />\r\n                  </Grid>\r\n              </Grid>\r\n              <Grid container  >\r\n                  <Grid item xs={6}>\r\n                      <TextField\r\n                          name='firstname'\r\n                          label=\"Firstname\"\r\n                          value={values.firstname}\r\n                          onChange={handleInputChange}\r\n                          className={classes.formTxt}\r\n                          error={errors.firstname}\r\n                          helperText={errors.firstname}\r\n                      />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                      <TextField\r\n                          name='directorate'\r\n                          label=\"Directorate\"\r\n                          value={values.directorate}\r\n                          onChange={handleInputChange}\r\n                          className={classes.formTxt}\r\n                          error={errors.directorate}\r\n                          helperText={errors.directorate}\r\n                      />\r\n                  </Grid>\r\n              </Grid>\r\n              <Grid container  >\r\n                  <Grid item xs={6}>\r\n                      <TextField\r\n                          name='lastname'\r\n                          label=\"Lastname\"\r\n                          value={values.lastname}\r\n                          onChange={handleInputChange}\r\n                          className={classes.formTxt}\r\n                          error={errors.lastname}\r\n                          helperText={errors.lastname}\r\n                      />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <FormControl className={classes.formControl}>\r\n                      <InputLabel htmlFor=\"group\">Group</InputLabel>\r\n                      <NativeSelect\r\n                        value={values.group}\r\n                        onChange={handleInputChange}\r\n                        error={errors.group}\r\n                        name=\"group\"\r\n                        inputProps={{\r\n                          id: 'group',\r\n                        }}\r\n                      >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        <option value='Admin'>Admin</option>\r\n                        <option value='Tester'>Tester</option>\r\n                      </NativeSelect>\r\n                      <FormHelperText className={classes.txtCol}>{errors.group}</FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n              </Grid>\r\n              <Grid container  >\r\n                  <Grid item xs={6}>\r\n                      <TextField\r\n                          name='nik'\r\n                          label=\"Nik\"\r\n                          value={values.nik}\r\n                          onChange={handleInputChange}\r\n                          className={classes.formTxt}\r\n                          error={errors.nik}\r\n                          helperText={errors.nik}\r\n                      />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <FormControl className={classes.formControl}>\r\n                      <InputLabel htmlFor=\"gcpproject\">GCP Project</InputLabel>\r\n                      <NativeSelect\r\n                        value={values.gcpproject}\r\n                        onChange={handleInputChange}\r\n                        error={errors.gcpproject}\r\n                        name=\"gcpproject\"\r\n                        inputProps={{\r\n                          id: 'gcpproject',\r\n                        }}\r\n                      >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        <option value='Project1'>Project1</option>\r\n                        <option value='Projet2'>Projet2</option>\r\n                      </NativeSelect>\r\n                      <FormHelperText className={classes.txtCol}>{errors.gcpproject}</FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n              </Grid>\r\n              <Grid container  >\r\n                  <Grid item xs={6}>\r\n                      <TextField\r\n                          name='email'\r\n                          label=\"Email\"\r\n                          value={values.email}\r\n                          onChange={handleInputChange}\r\n                          className={classes.formTxt}\r\n                          error={errors.email}\r\n                          helperText={errors.email}\r\n                      />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <FormControl className={classes.formControl}>\r\n                      <InputLabel htmlFor=\"gcprole\">GCP Role</InputLabel>\r\n                      <NativeSelect\r\n                        value={values.gcprole}\r\n                        onChange={handleInputChange}\r\n                        error={errors.gcprole}\r\n                        name=\"gcprole\"\r\n                        inputProps={{\r\n                          id: 'gcprole',\r\n                        }}\r\n                      >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        <option value='Owner'>Owner</option>\r\n                        <option value='Browser'>Browser</option>\r\n                        <option value='Editor'>Editor</option>\r\n                        <option value='Viewer'>Viewer</option>\r\n                      </NativeSelect>\r\n                      <FormHelperText className={classes.txtCol}>{errors.gcprole}</FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n              </Grid>\r\n              <Grid container  >\r\n                  <Grid item xs={6}>\r\n                      <TextField\r\n                          name='phone'\r\n                          label=\"Phone\"\r\n                          value={values.phone}\r\n                          onChange={handleInputChange}\r\n                          className={classes.formTxt}\r\n                          error={errors.phone}\r\n                          helperText={errors.phone}\r\n                      />\r\n                  </Grid>\r\n              </Grid>\r\n              {/* <Grid container  > */}\r\n                <DialogActions className={classes.subBtn}>\r\n                  <Button color=\"primary\" variant=\"contained\" onClick={handleSubmit}>\r\n                    Save\r\n                  </Button>\r\n                  <Button color=\"secondary\" variant=\"contained\" onClick={resetForm}>\r\n                    Cancel\r\n                  </Button>\r\n                  {/* <input color=\"primary\" variant=\"contained\" type=\"submit\" text=\"Submit\" value=\"Save\"></input> */}\r\n                </DialogActions>\r\n              {/* </Grid> */}\r\n            </div>\r\n          </div>\r\n        </DialogContent>  \r\n          </Form>\r\n        </div>\r\n      </Dialog>\r\n  );\r\n}\r\nexport default Crud",["137","138"],"D:\\Javascript Train\\REACT\\first\\modal\\src\\components\\DataList.js",["139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155"],"//Build Dynamic Table - From any WebApi or Local Json File Using AXIOS Methods\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport DataTable from \"react-data-table-component\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport SortIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Paper, { PaperProps } from '@material-ui/core/Paper';\r\n// import Crud from './components/Crud'\r\n\r\n\r\n\r\nclass Dl extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            datarecords: [],\r\n            datacolumns: [],\r\n            schema: [],\r\n        }\r\n    }\r\n\r\n     render() {\r\n        const datarecords = this.state.datarecords;\r\n        const table_headers = this.state.datacolumns;\r\n\r\n        const columns = [\r\n            {\r\n                name: \"ID\",\r\n                selector: \"id\",\r\n                sortable: true\r\n            },\r\n            {\r\n                name: \"EMAIL\",\r\n                selector: \"email\",\r\n                sortable: true\r\n            },\r\n            {\r\n                name: \"USERNAME\",\r\n                selector: \"username\",\r\n                sortable: true,\r\n                left: true\r\n            },\r\n            {\r\n                name: \"ROLE\",\r\n                selector: \"role\",\r\n                sortable: true,\r\n                left: true\r\n            },\r\n            {\r\n                name: 'ACTIONS',\r\n                button: true,\r\n                cell: () => <div data-tag=\"allowRowEvents\"><button type=\"button\">Edit</button><button type=\"button\">Delete</button></div>\r\n            }\r\n            \r\n        ];\r\n        // const columns = [\"Name\", \"Company\", \"City\", \"State\"];\r\n        const data = [\r\n         {id: 1, email: 'prakasbudiawan@gmail.com', username: 'prakas', role: 'owner'}\r\n           ];\r\n           \r\n           const options = {\r\n            filterType: 'checkbox',\r\n          };\r\n          \r\n       \r\n\r\n        return (\r\n\r\n            <div className=\"App\">\r\n                {/* <input type=\"button\" value=\"Create New\"/> */}\r\n                <Link to={`/Crudle`} >Test</Link>\r\n                    <Card>\r\n                        <DataTable\r\n                            title=\"User\"\r\n                            columns={columns}\r\n                            data={data}\r\n                            defaultSortField=\"id\"\r\n                            sortIcon={<SortIcon />}\r\n                            pagination\r\n                            //selectableRows\r\n                        />\r\n                            {/* <MUIDataTable \r\n                            title={\"Employee List\"} \r\n                            data={data} \r\n                            columns={columns} \r\n                            options={options} \r\n                            /> */}\r\n                    </Card>\r\n                      \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dl;\r\n","D:\\Javascript Train\\REACT\\first\\modal\\src\\components\\ListCard.js",[],"D:\\Javascript Train\\REACT\\first\\modal\\src\\components\\Drud.js",[],"D:\\Javascript Train\\REACT\\first\\modal\\src\\Homepage.js",["156","157"],"D:\\Javascript Train\\REACT\\first\\modal\\src\\AddData.js",["158","159","160"],"import React, { Component } from 'react';\r\n// import './App.css';/\r\n\r\nclass AddData extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      fields: {},\r\n      datas:[],\r\n      act:0,\r\n    }\r\n  } \r\n\r\n  fSubmit(e){\r\n    e.preventDefault()\r\n    \r\n    // console.log('naked')\r\n    let datas = this.state.datas\r\n    let name = this.state.fields.name\r\n    let address = this.state.fields.address\r\n    \r\n    if(this.state.act === 0 ){\r\n      let data = {\r\n        name, address\r\n        \r\n      }\r\n      datas.push(data)\r\n    }else{\r\n      let index = this.state.index\r\n      datas[index].name = name\r\n      datas[index].address = address\r\n    }\r\n\r\n    this.setState({\r\n      datas: datas,\r\n      act:0\r\n    })\r\n  }\r\n \r\n  handleChange(field, e){\r\n    let fields = this.state.fields\r\n    fields[field] = e.target.value\r\n    this.setState({fields})\r\n    // console.log(fields)\r\n  }\r\n\r\n  fRemove = (i) => {\r\n    let datas =  this.state.datas\r\n    datas.splice(i,1)\r\n    this.setState({\r\n      datas: datas\r\n    })\r\n  }\r\n\r\n  fEdit = (i) => {\r\n    let data = this.state.datas[i]\r\n    this.state.fields.name = data.name\r\n    this.state.fields.address = data.address\r\n\r\n    this.setState({\r\n      act: 1,\r\n      index: i\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let datas = this.state.datas;\r\n    return (\r\n      <div className=\"App\">\r\n        <h2>{this.state.title}</h2>\r\n        <form>\r\n          <input type=\"text\" placeholder=\"your name\" className=\"formField\" value={this.state.fields['name']} onChange={this.handleChange.bind(this, 'name')} />\r\n          <input type=\"text\" placeholder=\"your address\" className=\"formField\"  value={this.state.fields['address']} onChange={this.handleChange.bind(this, 'address')}/>\r\n          <button onClick={(e)=>this.fSubmit(e)} className=\"myButton\">submit </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddData;\r\n",["161","162"],"D:\\Javascript Train\\REACT\\first\\modal\\src\\IndexData.js",["163","164","165","166","167","168","169","170"],"//Build Dynamic Table - From any WebApi or Local Json File Using AXIOS Methods\r\n\r\n\r\nimport * as React from 'react';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport DataTable from \"react-data-table-component\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { withStyles, createStyles } from '@material-ui/core';\r\nimport SortIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass BuildDynamicTable extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            datarecords: [],\r\n            datacolumns: [],\r\n            schema: [],\r\n            clients:[{\r\n\r\n            }]\r\n        }\r\n    }\r\n\r\n    omponentDidMount() {\r\n        const clients = ''\r\n        clients = [\r\n          {id: '1', username: 'prakas'}\r\n        ]\r\n    }\r\n\r\n   \r\n\r\n     render() {\r\n        const datarecords = this.state.datarecords;\r\n        const table_headers = this.state.datacolumns;\r\n\r\n        const columns = [\r\n            {\r\n              name: 'ID',\r\n              selector: 'id',\r\n              sortable: true,\r\n            }, \r\n            {\r\n              name: \"Username\",\r\n              selector: \"Username\",\r\n              sortable: true,\r\n            },\r\n            {\r\n              name: \"Fullname\",\r\n              selector: \"Fullname\",\r\n              sortable: true,\r\n              right: true,\r\n            },\r\n            {\r\n              name: \"Email\",\r\n              selector: \"Email\",\r\n              sortable: true,\r\n              right: true,\r\n            },\r\n            {\r\n              name: \"Phone\",\r\n              selector: \"Phone\",\r\n              sortable: true,\r\n              right: true,\r\n            },\r\n            {\r\n              name: \"Directorate\",\r\n              selector: \"Directorate\",\r\n              sortable: true,\r\n              right: true,\r\n            },\r\n            {\r\n              name: \"Last Login\",\r\n              selector: \"Last_Login\",\r\n              sortable: true,\r\n              right: true,\r\n            },\r\n            {\r\n              name: \"Position\",\r\n              selector: \"Position\",\r\n              sortable: true,\r\n              right: true,\r\n            },\r\n            {\r\n              name: \"Group\",\r\n              selector: \"Group\",\r\n              sortable: true,\r\n              right: true,\r\n            },\r\n            {\r\n              name: \"Is Login\",\r\n              selector: \"Is_Login\",\r\n              sortable: true,\r\n              right: true,\r\n            },\r\n            {\r\n              name: \"GCP Project\",\r\n              selector: \"GCP_Project\",\r\n              sortable: true,\r\n              right: true,\r\n            },\r\n            {\r\n              name: \"GCP Role\",\r\n              selector: \"GCP_Role\",\r\n              sortable: true,\r\n              right: true,\r\n            },\r\n            {\r\n              name: 'ACTIONS',\r\n              button: true,\r\n              cell: () => <div data-tag=\"allowRowEvents\"><button type=\"button\">Edit</button><button type=\"button\">Delete</button></div>\r\n          }\r\n          ];\r\n          const StyledCard = withStyles({\r\n            root: {\r\n              padding: '3%'\r\n            },\r\n          })(Card);\r\n        \r\n          const { clients } = this.state\r\n        return (\r\n\r\n            <div className=\"App\">\r\n                <div className=\"Dashboard-main\">\r\n                  <StyledCard>\r\n                    <Button color='primary' variant=\"contained\" to=\"/adduser\" component={Link}>\r\n                        Create New\r\n                    </Button>\r\n                    <DataTable \r\n                      data={clients} \r\n                      columns={columns} \r\n                      defaultSortField=\"id\"\r\n                      sortIcon={<SortIcon />}\r\n                      pagination\r\n                    />\r\n                  </StyledCard>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BuildDynamicTable;\r\n","D:\\Javascript Train\\REACT\\first\\modal\\src\\components\\modal.js",[],["171","172"],"D:\\Javascript Train\\REACT\\first\\modal\\src\\data.js",[],"D:\\Javascript Train\\REACT\\first\\modal\\src\\modalEdit.js",["173"],"D:\\Javascript Train\\REACT\\first\\modal\\src\\Select.js",["174"],"import React, { Component, PropTypes } from 'react';\r\n\r\nclass Select extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { value: props.value }; // can be initialized by <Select value='someValue' />\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <label>\r\n          <select className=\"widefat\" value={this.state.value} name={this.props.name} onChange={this.handleChange.bind(this)}>\r\n            <option value=\"grapefruit\">Grapefruit</option>\r\n            <option value=\"lime\">Lime</option>\r\n            <option value=\"coconut\">Coconut</option>\r\n            <option value=\"mango\">Mango</option>\r\n          </select>\r\n        </label>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Select;","D:\\Javascript Train\\REACT\\first\\modal\\src\\open.js",["175","176","177","178","179","180"],"D:\\Javascript Train\\REACT\\first\\modal\\src\\Not.js",[],"D:\\Javascript Train\\REACT\\first\\modal\\src\\color.js",[],["181","182"],"D:\\Javascript Train\\REACT\\first\\modal\\src\\demo\\generator.js",[],"D:\\Javascript Train\\REACT\\first\\modal\\src\\demo\\random.js",["183"],"D:\\Javascript Train\\REACT\\first\\modal\\src\\Sidebar.js",["184"],"import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\n\r\nfunction SidebarItem({ depthStep = 10, depth = 0, expanded, item, ...rest }) {\r\n  const [collapsed, setCollapsed] = React.useState(true);\r\n  const { label, items, Icon, onClick: onClickProp } = item;\r\n\r\n  function toggleCollapse() {\r\n    setCollapsed(prevValue => !prevValue);\r\n  }\r\n\r\n  function onClick(e) {\r\n    if (Array.isArray(items)) {\r\n      toggleCollapse();\r\n    }\r\n    if (onClickProp) {\r\n      onClickProp(e, item);\r\n    }\r\n  }\r\n\r\n  let expandIcon;\r\n\r\n  if (Array.isArray(items) && items.length) {\r\n    expandIcon = !collapsed ? (\r\n      <ExpandLessIcon\r\n        className={\r\n          \"sidebar-item-expand-arrow\" + \" sidebar-item-expand-arrow-expanded\"\r\n        }\r\n      />\r\n    ) : (\r\n      <ExpandMoreIcon className=\"sidebar-item-expand-arrow\" />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ListItem\r\n        className=\"sidebar-item\"\r\n        onClick={onClick}\r\n        button\r\n        dense\r\n        {...rest}\r\n      >\r\n        <div\r\n          style={{ paddingLeft: depth * depthStep }}\r\n          className=\"sidebar-item-content\"\r\n        >\r\n          {Icon && <Icon className=\"sidebar-item-icon\" fontSize=\"small\" />}\r\n          <div className=\"sidebar-item-text\">{label}</div>\r\n        </div>\r\n        {expandIcon}\r\n      </ListItem>\r\n      <Collapse in={!collapsed} timeout=\"auto\" unmountOnExit>\r\n        {Array.isArray(items) ? (\r\n          <List disablePadding dense>\r\n            {items.map((subItem, index) => (\r\n              <React.Fragment key={`${subItem.name}${index}`}>\r\n                {subItem === \"divider\" ? (\r\n                  <Divider style={{ margin: \"6px 0\" }} />\r\n                ) : (\r\n                  <SidebarItem\r\n                    depth={depth + 1}\r\n                    depthStep={depthStep}\r\n                    item={subItem}\r\n                  />\r\n                )}\r\n              </React.Fragment>\r\n            ))}\r\n          </List>\r\n        ) : null}\r\n      </Collapse>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Sidebar({ items, depthStep, depth, expanded }) {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <List disablePadding dense>\r\n        {items.map((sidebarItem, index) => (\r\n          <React.Fragment key={`${sidebarItem.name}${index}`}>\r\n            {sidebarItem === \"divider\" ? (\r\n              <Divider style={{ margin: \"6px 0\" }} />\r\n            ) : (\r\n              <SidebarItem\r\n                depthStep={depthStep}\r\n                depth={depth}\r\n                expanded={expanded}\r\n                item={sidebarItem}\r\n              />\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n",["185","186"],{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":28,"column":20,"nodeType":"193","messageId":"194","endLine":28,"endColumn":28},{"ruleId":"191","severity":1,"message":"195","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":26},{"ruleId":"187","replacedBy":"196"},{"ruleId":"189","replacedBy":"197"},{"ruleId":"191","severity":1,"message":"198","line":2,"column":8,"nodeType":"193","messageId":"194","endLine":2,"endColumn":14},{"ruleId":"191","severity":1,"message":"199","line":3,"column":8,"nodeType":"193","messageId":"194","endLine":3,"endColumn":17},{"ruleId":"191","severity":1,"message":"200","line":4,"column":8,"nodeType":"193","messageId":"194","endLine":4,"endColumn":14},{"ruleId":"191","severity":1,"message":"201","line":5,"column":8,"nodeType":"193","messageId":"194","endLine":5,"endColumn":21},{"ruleId":"191","severity":1,"message":"202","line":6,"column":8,"nodeType":"193","messageId":"194","endLine":6,"endColumn":21},{"ruleId":"191","severity":1,"message":"203","line":7,"column":8,"nodeType":"193","messageId":"194","endLine":7,"endColumn":25},{"ruleId":"191","severity":1,"message":"204","line":8,"column":8,"nodeType":"193","messageId":"194","endLine":8,"endColumn":19},{"ruleId":"191","severity":1,"message":"205","line":9,"column":8,"nodeType":"193","messageId":"194","endLine":9,"endColumn":12},{"ruleId":"191","severity":1,"message":"206","line":14,"column":10,"nodeType":"193","messageId":"194","endLine":14,"endColumn":14},{"ruleId":"191","severity":1,"message":"207","line":19,"column":7,"nodeType":"193","messageId":"194","endLine":19,"endColumn":18},{"ruleId":"191","severity":1,"message":"198","line":2,"column":8,"nodeType":"193","messageId":"194","endLine":2,"endColumn":14},{"ruleId":"191","severity":1,"message":"203","line":7,"column":8,"nodeType":"193","messageId":"194","endLine":7,"endColumn":25},{"ruleId":"191","severity":1,"message":"208","line":9,"column":36,"nodeType":"193","messageId":"194","endLine":9,"endColumn":41},{"ruleId":"191","severity":1,"message":"209","line":69,"column":9,"nodeType":"193","messageId":"194","endLine":69,"endColumn":24},{"ruleId":"191","severity":1,"message":"210","line":73,"column":9,"nodeType":"193","messageId":"194","endLine":73,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":110,"column":21,"nodeType":"213","messageId":"214","endLine":110,"endColumn":23},{"ruleId":"211","severity":1,"message":"212","line":111,"column":49,"nodeType":"213","messageId":"214","endLine":111,"endColumn":51},{"ruleId":"191","severity":1,"message":"215","line":116,"column":5,"nodeType":"193","messageId":"194","endLine":116,"endColumn":14},{"ruleId":"191","severity":1,"message":"216","line":126,"column":11,"nodeType":"193","messageId":"194","endLine":126,"endColumn":15},{"ruleId":"187","replacedBy":"217"},{"ruleId":"189","replacedBy":"218"},{"ruleId":"191","severity":1,"message":"219","line":4,"column":17,"nodeType":"193","messageId":"194","endLine":4,"endColumn":25},{"ruleId":"191","severity":1,"message":"220","line":5,"column":16,"nodeType":"193","messageId":"194","endLine":5,"endColumn":35},{"ruleId":"191","severity":1,"message":"221","line":6,"column":8,"nodeType":"193","messageId":"194","endLine":6,"endColumn":13},{"ruleId":"191","severity":1,"message":"222","line":7,"column":8,"nodeType":"193","messageId":"194","endLine":7,"endColumn":9},{"ruleId":"191","severity":1,"message":"199","line":11,"column":8,"nodeType":"193","messageId":"194","endLine":11,"endColumn":17},{"ruleId":"191","severity":1,"message":"223","line":12,"column":8,"nodeType":"193","messageId":"194","endLine":12,"endColumn":20},{"ruleId":"191","severity":1,"message":"198","line":13,"column":8,"nodeType":"193","messageId":"194","endLine":13,"endColumn":14},{"ruleId":"191","severity":1,"message":"200","line":14,"column":8,"nodeType":"193","messageId":"194","endLine":14,"endColumn":14},{"ruleId":"191","severity":1,"message":"201","line":15,"column":8,"nodeType":"193","messageId":"194","endLine":15,"endColumn":21},{"ruleId":"191","severity":1,"message":"202","line":16,"column":8,"nodeType":"193","messageId":"194","endLine":16,"endColumn":21},{"ruleId":"191","severity":1,"message":"203","line":17,"column":8,"nodeType":"193","messageId":"194","endLine":17,"endColumn":25},{"ruleId":"191","severity":1,"message":"204","line":18,"column":8,"nodeType":"193","messageId":"194","endLine":18,"endColumn":19},{"ruleId":"191","severity":1,"message":"224","line":19,"column":8,"nodeType":"193","messageId":"194","endLine":19,"endColumn":13},{"ruleId":"191","severity":1,"message":"225","line":19,"column":17,"nodeType":"193","messageId":"194","endLine":19,"endColumn":27},{"ruleId":"191","severity":1,"message":"226","line":35,"column":15,"nodeType":"193","messageId":"194","endLine":35,"endColumn":26},{"ruleId":"191","severity":1,"message":"227","line":36,"column":15,"nodeType":"193","messageId":"194","endLine":36,"endColumn":28},{"ruleId":"191","severity":1,"message":"228","line":73,"column":18,"nodeType":"193","messageId":"194","endLine":73,"endColumn":25},{"ruleId":"191","severity":1,"message":"229","line":1,"column":10,"nodeType":"193","messageId":"194","endLine":1,"endColumn":14},{"ruleId":"191","severity":1,"message":"230","line":2,"column":8,"nodeType":"193","messageId":"194","endLine":2,"endColumn":13},{"ruleId":"231","severity":1,"message":"232","line":58,"column":5,"nodeType":"233","endLine":58,"endColumn":22},{"ruleId":"231","severity":1,"message":"232","line":59,"column":5,"nodeType":"233","endLine":59,"endColumn":22},{"ruleId":"191","severity":1,"message":"234","line":68,"column":9,"nodeType":"193","messageId":"194","endLine":68,"endColumn":14},{"ruleId":"187","replacedBy":"235"},{"ruleId":"189","replacedBy":"236"},{"ruleId":"191","severity":1,"message":"220","line":5,"column":16,"nodeType":"193","messageId":"194","endLine":5,"endColumn":35},{"ruleId":"191","severity":1,"message":"221","line":6,"column":8,"nodeType":"193","messageId":"194","endLine":6,"endColumn":13},{"ruleId":"191","severity":1,"message":"222","line":7,"column":8,"nodeType":"193","messageId":"194","endLine":7,"endColumn":9},{"ruleId":"191","severity":1,"message":"237","line":10,"column":22,"nodeType":"193","messageId":"194","endLine":10,"endColumn":34},{"ruleId":"238","severity":1,"message":"239","line":29,"column":9,"nodeType":"193","messageId":"240","endLine":29,"endColumn":16},{"ruleId":"191","severity":1,"message":"241","line":29,"column":9,"nodeType":"193","messageId":"194","endLine":29,"endColumn":16},{"ruleId":"191","severity":1,"message":"226","line":37,"column":15,"nodeType":"193","messageId":"194","endLine":37,"endColumn":26},{"ruleId":"191","severity":1,"message":"227","line":38,"column":15,"nodeType":"193","messageId":"194","endLine":38,"endColumn":28},{"ruleId":"187","replacedBy":"242"},{"ruleId":"189","replacedBy":"243"},{"ruleId":"191","severity":1,"message":"192","line":36,"column":20,"nodeType":"193","messageId":"194","endLine":36,"endColumn":28},{"ruleId":"191","severity":1,"message":"244","line":1,"column":28,"nodeType":"193","messageId":"194","endLine":1,"endColumn":37},{"ruleId":"191","severity":1,"message":"245","line":3,"column":8,"nodeType":"193","messageId":"194","endLine":3,"endColumn":14},{"ruleId":"191","severity":1,"message":"246","line":4,"column":8,"nodeType":"193","messageId":"194","endLine":4,"endColumn":12},{"ruleId":"191","severity":1,"message":"247","line":9,"column":5,"nodeType":"193","messageId":"194","endLine":9,"endColumn":7},{"ruleId":"191","severity":1,"message":"248","line":13,"column":5,"nodeType":"193","messageId":"194","endLine":13,"endColumn":10},{"ruleId":"191","severity":1,"message":"249","line":18,"column":5,"nodeType":"193","messageId":"194","endLine":18,"endColumn":15},{"ruleId":"191","severity":1,"message":"250","line":19,"column":5,"nodeType":"193","messageId":"194","endLine":19,"endColumn":12},{"ruleId":"187","replacedBy":"251"},{"ruleId":"189","replacedBy":"252"},{"ruleId":"253","severity":1,"message":"254","line":1,"column":1,"nodeType":"255","endLine":13,"endColumn":2},{"ruleId":"256","severity":1,"message":"257","line":32,"column":39,"nodeType":"213","messageId":"258","endLine":32,"endColumn":40},{"ruleId":"187","replacedBy":"259"},{"ruleId":"189","replacedBy":"260"},"no-native-reassign",["261"],"no-negated-in-lhs",["262"],"no-unused-vars","'isLoaded' is assigned a value but never used.","Identifier","unusedVar","'Component' is defined but never used.",["261"],["262"],"'Button' is defined but never used.","'TextField' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'Crud' is defined but never used.","'open' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'Theme' is defined but never used.","'handleClickOpen' is assigned a value but never used.","'history' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setValues' is assigned a value but never used.","'data' is assigned a value but never used.",["261"],["262"],"'useState' is defined but never used.","'RouteComponentProps' is defined but never used.","'axios' is defined but never used.","'_' is defined but never used.","'MUIDataTable' is defined but never used.","'Paper' is defined but never used.","'PaperProps' is defined but never used.","'datarecords' is assigned a value but never used.","'table_headers' is assigned a value but never used.","'options' is assigned a value but never used.","'Home' is defined but never used.","'React' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'datas' is assigned a value but never used.",["261"],["262"],"'createStyles' is defined but never used.","no-const-assign","'clients' is constant.","const","'clients' is assigned a value but never used.",["261"],["262"],"'PropTypes' is defined but never used.","'Select' is defined but never used.","'Chip' is defined but never used.","'Id' is assigned a value but never used.","'Users' is assigned a value but never used.","'saveUpdate' is assigned a value but never used.","'classes' is assigned a value but never used.",["261"],["262"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat",["261"],["262"],"no-global-assign","no-unsafe-negation"]